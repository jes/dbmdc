#!/usr/bin/perl
# Crappy DBM::Deep client
# A low-class hooker: not pretty, just does the job and gets out of the way
# James Stanley 2013

use strict;
use warnings;

use Data::Dump qw(dump);
use DBM::Deep;
use Term::ReadLine;

my $term = Term::ReadLine->new('dbmdc');

my $PROMPT = 'perl> ';

my $usage = 'usage: dbmdc FILENAME';
my $file = shift or die "$usage\n";

my $db = DBM::Deep->new($file);

print STDERR "Your database is called \$db\n";
print STDERR "Interact with it using normal Perl.\n";
print STDERR "The result of each line is dumped to stdout after some rudimentary filtering.\n";
print STDERR "\n";

while (defined (my $line = $term->readline($PROMPT))) {
    my $result = eval "$line";
    if ($@) {
        print STDERR $@;
    } else {
        $term->addhistory($line);

        my $dump = dump($result);

        # strip comments
        $dump =~ s/\n\s*#.*\n/\n/g;

        # strip blessings
        $dump =~ s/bless\(//g;
        $dump =~ s/, "[\w:]*"\)//g;

        print "$dump\n";
    }
}
